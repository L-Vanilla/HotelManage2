<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neuedu.dao.OrderFormMapper">
  <resultMap id="BaseResultMap" type="com.neuedu.pojo.OrderForm">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="room_id" jdbcType="VARCHAR" property="roomId" />
    <result column="room_price" jdbcType="DECIMAL" property="roomPrice" />
    <result column="deposit" jdbcType="DECIMAL" property="deposit" />
    <result column="lived_days" jdbcType="INTEGER" property="livedDays" />
    <result column="lived_price" jdbcType="DECIMAL" property="livedPrice" />
    <result column="room_bill" jdbcType="DECIMAL" property="roomBill" />
    <result column="food_bill" jdbcType="DECIMAL" property="foodBill" />
    <result column="tel_bill" jdbcType="DECIMAL" property="telBill" />
    <result column="total_bill" jdbcType="DECIMAL" property="totalBill" />
    <result column="reback_deposit" jdbcType="DECIMAL" property="rebackDeposit" />
    <result column="pay_style" jdbcType="VARCHAR" property="payStyle" />
    <result column="real_wages" jdbcType="DECIMAL" property="realWages" />
    <result column="odd_change" jdbcType="DECIMAL" property="oddChange" />
    <result column="user" jdbcType="VARCHAR" property="user" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="active" jdbcType="INTEGER" property="active" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, room_id, room_price, deposit, lived_days, lived_price, room_bill, food_bill, 
    tel_bill, total_bill, reback_deposit, pay_style, real_wages, odd_change, user, remarks, 
    active, create_date
  </sql>
  <select id="selectByExample" parameterType="com.neuedu.pojo.OrderFormExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_form
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order_form
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from order_form
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neuedu.pojo.OrderFormExample">
    delete from order_form
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neuedu.pojo.OrderForm">
    insert into order_form (id, room_id, room_price, 
      deposit, lived_days, lived_price, 
      room_bill, food_bill, tel_bill, 
      total_bill, reback_deposit, pay_style, 
      real_wages, odd_change, user, 
      remarks, active, create_date
      )
    values (#{id,jdbcType=INTEGER}, #{roomId,jdbcType=VARCHAR}, #{roomPrice,jdbcType=DECIMAL}, 
      #{deposit,jdbcType=DECIMAL}, #{livedDays,jdbcType=INTEGER}, #{livedPrice,jdbcType=DECIMAL}, 
      #{roomBill,jdbcType=DECIMAL}, #{foodBill,jdbcType=DECIMAL}, #{telBill,jdbcType=DECIMAL}, 
      #{totalBill,jdbcType=DECIMAL}, #{rebackDeposit,jdbcType=DECIMAL}, #{payStyle,jdbcType=VARCHAR}, 
      #{realWages,jdbcType=DECIMAL}, #{oddChange,jdbcType=DECIMAL}, #{user,jdbcType=VARCHAR}, 
      #{remarks,jdbcType=VARCHAR}, #{active,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.neuedu.pojo.OrderForm">
    insert into order_form
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="roomId != null">
        room_id,
      </if>
      <if test="roomPrice != null">
        room_price,
      </if>
      <if test="deposit != null">
        deposit,
      </if>
      <if test="livedDays != null">
        lived_days,
      </if>
      <if test="livedPrice != null">
        lived_price,
      </if>
      <if test="roomBill != null">
        room_bill,
      </if>
      <if test="foodBill != null">
        food_bill,
      </if>
      <if test="telBill != null">
        tel_bill,
      </if>
      <if test="totalBill != null">
        total_bill,
      </if>
      <if test="rebackDeposit != null">
        reback_deposit,
      </if>
      <if test="payStyle != null">
        pay_style,
      </if>
      <if test="realWages != null">
        real_wages,
      </if>
      <if test="oddChange != null">
        odd_change,
      </if>
      <if test="user != null">
        user,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="active != null">
        active,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="roomId != null">
        #{roomId,jdbcType=VARCHAR},
      </if>
      <if test="roomPrice != null">
        #{roomPrice,jdbcType=DECIMAL},
      </if>
      <if test="deposit != null">
        #{deposit,jdbcType=DECIMAL},
      </if>
      <if test="livedDays != null">
        #{livedDays,jdbcType=INTEGER},
      </if>
      <if test="livedPrice != null">
        #{livedPrice,jdbcType=DECIMAL},
      </if>
      <if test="roomBill != null">
        #{roomBill,jdbcType=DECIMAL},
      </if>
      <if test="foodBill != null">
        #{foodBill,jdbcType=DECIMAL},
      </if>
      <if test="telBill != null">
        #{telBill,jdbcType=DECIMAL},
      </if>
      <if test="totalBill != null">
        #{totalBill,jdbcType=DECIMAL},
      </if>
      <if test="rebackDeposit != null">
        #{rebackDeposit,jdbcType=DECIMAL},
      </if>
      <if test="payStyle != null">
        #{payStyle,jdbcType=VARCHAR},
      </if>
      <if test="realWages != null">
        #{realWages,jdbcType=DECIMAL},
      </if>
      <if test="oddChange != null">
        #{oddChange,jdbcType=DECIMAL},
      </if>
      <if test="user != null">
        #{user,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="active != null">
        #{active,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neuedu.pojo.OrderFormExample" resultType="java.lang.Long">
    select count(*) from order_form
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update order_form
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.roomId != null">
        room_id = #{record.roomId,jdbcType=VARCHAR},
      </if>
      <if test="record.roomPrice != null">
        room_price = #{record.roomPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.deposit != null">
        deposit = #{record.deposit,jdbcType=DECIMAL},
      </if>
      <if test="record.livedDays != null">
        lived_days = #{record.livedDays,jdbcType=INTEGER},
      </if>
      <if test="record.livedPrice != null">
        lived_price = #{record.livedPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.roomBill != null">
        room_bill = #{record.roomBill,jdbcType=DECIMAL},
      </if>
      <if test="record.foodBill != null">
        food_bill = #{record.foodBill,jdbcType=DECIMAL},
      </if>
      <if test="record.telBill != null">
        tel_bill = #{record.telBill,jdbcType=DECIMAL},
      </if>
      <if test="record.totalBill != null">
        total_bill = #{record.totalBill,jdbcType=DECIMAL},
      </if>
      <if test="record.rebackDeposit != null">
        reback_deposit = #{record.rebackDeposit,jdbcType=DECIMAL},
      </if>
      <if test="record.payStyle != null">
        pay_style = #{record.payStyle,jdbcType=VARCHAR},
      </if>
      <if test="record.realWages != null">
        real_wages = #{record.realWages,jdbcType=DECIMAL},
      </if>
      <if test="record.oddChange != null">
        odd_change = #{record.oddChange,jdbcType=DECIMAL},
      </if>
      <if test="record.user != null">
        user = #{record.user,jdbcType=VARCHAR},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.active != null">
        active = #{record.active,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update order_form
    set id = #{record.id,jdbcType=INTEGER},
      room_id = #{record.roomId,jdbcType=VARCHAR},
      room_price = #{record.roomPrice,jdbcType=DECIMAL},
      deposit = #{record.deposit,jdbcType=DECIMAL},
      lived_days = #{record.livedDays,jdbcType=INTEGER},
      lived_price = #{record.livedPrice,jdbcType=DECIMAL},
      room_bill = #{record.roomBill,jdbcType=DECIMAL},
      food_bill = #{record.foodBill,jdbcType=DECIMAL},
      tel_bill = #{record.telBill,jdbcType=DECIMAL},
      total_bill = #{record.totalBill,jdbcType=DECIMAL},
      reback_deposit = #{record.rebackDeposit,jdbcType=DECIMAL},
      pay_style = #{record.payStyle,jdbcType=VARCHAR},
      real_wages = #{record.realWages,jdbcType=DECIMAL},
      odd_change = #{record.oddChange,jdbcType=DECIMAL},
      user = #{record.user,jdbcType=VARCHAR},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      active = #{record.active,jdbcType=INTEGER},
      create_date = #{record.createDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neuedu.pojo.OrderForm">
    update order_form
    <set>
      <if test="roomId != null">
        room_id = #{roomId,jdbcType=VARCHAR},
      </if>
      <if test="roomPrice != null">
        room_price = #{roomPrice,jdbcType=DECIMAL},
      </if>
      <if test="deposit != null">
        deposit = #{deposit,jdbcType=DECIMAL},
      </if>
      <if test="livedDays != null">
        lived_days = #{livedDays,jdbcType=INTEGER},
      </if>
      <if test="livedPrice != null">
        lived_price = #{livedPrice,jdbcType=DECIMAL},
      </if>
      <if test="roomBill != null">
        room_bill = #{roomBill,jdbcType=DECIMAL},
      </if>
      <if test="foodBill != null">
        food_bill = #{foodBill,jdbcType=DECIMAL},
      </if>
      <if test="telBill != null">
        tel_bill = #{telBill,jdbcType=DECIMAL},
      </if>
      <if test="totalBill != null">
        total_bill = #{totalBill,jdbcType=DECIMAL},
      </if>
      <if test="rebackDeposit != null">
        reback_deposit = #{rebackDeposit,jdbcType=DECIMAL},
      </if>
      <if test="payStyle != null">
        pay_style = #{payStyle,jdbcType=VARCHAR},
      </if>
      <if test="realWages != null">
        real_wages = #{realWages,jdbcType=DECIMAL},
      </if>
      <if test="oddChange != null">
        odd_change = #{oddChange,jdbcType=DECIMAL},
      </if>
      <if test="user != null">
        user = #{user,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="active != null">
        active = #{active,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neuedu.pojo.OrderForm">
    update order_form
    set room_id = #{roomId,jdbcType=VARCHAR},
      room_price = #{roomPrice,jdbcType=DECIMAL},
      deposit = #{deposit,jdbcType=DECIMAL},
      lived_days = #{livedDays,jdbcType=INTEGER},
      lived_price = #{livedPrice,jdbcType=DECIMAL},
      room_bill = #{roomBill,jdbcType=DECIMAL},
      food_bill = #{foodBill,jdbcType=DECIMAL},
      tel_bill = #{telBill,jdbcType=DECIMAL},
      total_bill = #{totalBill,jdbcType=DECIMAL},
      reback_deposit = #{rebackDeposit,jdbcType=DECIMAL},
      pay_style = #{payStyle,jdbcType=VARCHAR},
      real_wages = #{realWages,jdbcType=DECIMAL},
      odd_change = #{oddChange,jdbcType=DECIMAL},
      user = #{user,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=VARCHAR},
      active = #{active,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>