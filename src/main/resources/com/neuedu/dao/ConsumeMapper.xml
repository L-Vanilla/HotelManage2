<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neuedu.dao.ConsumeMapper">
  <resultMap id="BaseResultMap" type="com.neuedu.pojo.Consume">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="live_id" jdbcType="INTEGER" property="liveId" />
    <result column="room_id" jdbcType="VARCHAR" property="roomId" />
    <result column="good_typeid" jdbcType="INTEGER" property="goodTypeid" />
    <result column="good_id" jdbcType="INTEGER" property="goodId" />
    <result column="good_name" jdbcType="VARCHAR" property="goodName" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="consume_price" jdbcType="DECIMAL" property="consumePrice" />
    <result column="discount" jdbcType="INTEGER" property="discount" />
    <result column="dc_price" jdbcType="DECIMAL" property="dcPrice" />
    <result column="total_price" jdbcType="DECIMAL" property="totalPrice" />
    <result column="user" jdbcType="VARCHAR" property="user" />
    <result column="consume_time" jdbcType="TIMESTAMP" property="consumeTime" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="active" jdbcType="INTEGER" property="active" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <association  property="goodsType" column="good_typeid" select="com.neuedu.dao.GoodsTypeMapper.selectByPrimaryKey"></association>
    <association  property="goods" column="good_id" select="com.neuedu.dao.GoodsMapper.selectByPrimaryKey"></association>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, live_id, room_id, good_typeid, good_id, good_name, num, price, consume_price, 
    discount, dc_price, total_price, user, consume_time, remarks, active, create_date
  </sql>
  <select id="selectByExample" parameterType="com.neuedu.pojo.ConsumeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from consume
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from consume
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from consume
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neuedu.pojo.ConsumeExample">
    delete from consume
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neuedu.pojo.Consume">
    insert into consume (id, live_id, room_id, 
      good_typeid, good_id, good_name, 
      num, price, consume_price, 
      discount, dc_price, total_price, 
      user, consume_time, remarks, 
      active, create_date)
    values (#{id,jdbcType=INTEGER}, #{liveId,jdbcType=INTEGER}, #{roomId,jdbcType=VARCHAR}, 
      #{goodTypeid,jdbcType=INTEGER}, #{goodId,jdbcType=INTEGER}, #{goodName,jdbcType=VARCHAR}, 
      #{num,jdbcType=INTEGER}, #{price,jdbcType=DECIMAL}, #{consumePrice,jdbcType=DECIMAL}, 
      #{discount,jdbcType=INTEGER}, #{dcPrice,jdbcType=DECIMAL}, #{totalPrice,jdbcType=DECIMAL}, 
      #{user,jdbcType=VARCHAR}, #{consumeTime,jdbcType=TIMESTAMP}, #{remarks,jdbcType=VARCHAR}, 
      #{active,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.neuedu.pojo.Consume">
    insert into consume
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="liveId != null">
        live_id,
      </if>
      <if test="roomId != null">
        room_id,
      </if>
      <if test="goodTypeid != null">
        good_typeid,
      </if>
      <if test="goodId != null">
        good_id,
      </if>
      <if test="goodName != null">
        good_name,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="consumePrice != null">
        consume_price,
      </if>
      <if test="discount != null">
        discount,
      </if>
      <if test="dcPrice != null">
        dc_price,
      </if>
      <if test="totalPrice != null">
        total_price,
      </if>
      <if test="user != null">
        user,
      </if>
      <if test="consumeTime != null">
        consume_time,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="active != null">
        active,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="liveId != null">
        #{liveId,jdbcType=INTEGER},
      </if>
      <if test="roomId != null">
        #{roomId,jdbcType=VARCHAR},
      </if>
      <if test="goodTypeid != null">
        #{goodTypeid,jdbcType=INTEGER},
      </if>
      <if test="goodId != null">
        #{goodId,jdbcType=INTEGER},
      </if>
      <if test="goodName != null">
        #{goodName,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="consumePrice != null">
        #{consumePrice,jdbcType=DECIMAL},
      </if>
      <if test="discount != null">
        #{discount,jdbcType=INTEGER},
      </if>
      <if test="dcPrice != null">
        #{dcPrice,jdbcType=DECIMAL},
      </if>
      <if test="totalPrice != null">
        #{totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="user != null">
        #{user,jdbcType=VARCHAR},
      </if>
      <if test="consumeTime != null">
        #{consumeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="active != null">
        #{active,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neuedu.pojo.ConsumeExample" resultType="java.lang.Long">
    select count(*) from consume
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update consume
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.liveId != null">
        live_id = #{record.liveId,jdbcType=INTEGER},
      </if>
      <if test="record.roomId != null">
        room_id = #{record.roomId,jdbcType=VARCHAR},
      </if>
      <if test="record.goodTypeid != null">
        good_typeid = #{record.goodTypeid,jdbcType=INTEGER},
      </if>
      <if test="record.goodId != null">
        good_id = #{record.goodId,jdbcType=INTEGER},
      </if>
      <if test="record.goodName != null">
        good_name = #{record.goodName,jdbcType=VARCHAR},
      </if>
      <if test="record.num != null">
        num = #{record.num,jdbcType=INTEGER},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.consumePrice != null">
        consume_price = #{record.consumePrice,jdbcType=DECIMAL},
      </if>
      <if test="record.discount != null">
        discount = #{record.discount,jdbcType=INTEGER},
      </if>
      <if test="record.dcPrice != null">
        dc_price = #{record.dcPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.totalPrice != null">
        total_price = #{record.totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.user != null">
        user = #{record.user,jdbcType=VARCHAR},
      </if>
      <if test="record.consumeTime != null">
        consume_time = #{record.consumeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.active != null">
        active = #{record.active,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update consume
    set id = #{record.id,jdbcType=INTEGER},
      live_id = #{record.liveId,jdbcType=INTEGER},
      room_id = #{record.roomId,jdbcType=VARCHAR},
      good_typeid = #{record.goodTypeid,jdbcType=INTEGER},
      good_id = #{record.goodId,jdbcType=INTEGER},
      good_name = #{record.goodName,jdbcType=VARCHAR},
      num = #{record.num,jdbcType=INTEGER},
      price = #{record.price,jdbcType=DECIMAL},
      consume_price = #{record.consumePrice,jdbcType=DECIMAL},
      discount = #{record.discount,jdbcType=INTEGER},
      dc_price = #{record.dcPrice,jdbcType=DECIMAL},
      total_price = #{record.totalPrice,jdbcType=DECIMAL},
      user = #{record.user,jdbcType=VARCHAR},
      consume_time = #{record.consumeTime,jdbcType=TIMESTAMP},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      active = #{record.active,jdbcType=INTEGER},
      create_date = #{record.createDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neuedu.pojo.Consume">
    update consume
    <set>
      <if test="liveId != null">
        live_id = #{liveId,jdbcType=INTEGER},
      </if>
      <if test="roomId != null">
        room_id = #{roomId,jdbcType=VARCHAR},
      </if>
      <if test="goodTypeid != null">
        good_typeid = #{goodTypeid,jdbcType=INTEGER},
      </if>
      <if test="goodId != null">
        good_id = #{goodId,jdbcType=INTEGER},
      </if>
      <if test="goodName != null">
        good_name = #{goodName,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="consumePrice != null">
        consume_price = #{consumePrice,jdbcType=DECIMAL},
      </if>
      <if test="discount != null">
        discount = #{discount,jdbcType=INTEGER},
      </if>
      <if test="dcPrice != null">
        dc_price = #{dcPrice,jdbcType=DECIMAL},
      </if>
      <if test="totalPrice != null">
        total_price = #{totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="user != null">
        user = #{user,jdbcType=VARCHAR},
      </if>
      <if test="consumeTime != null">
        consume_time = #{consumeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="active != null">
        active = #{active,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neuedu.pojo.Consume">
    update consume
    set live_id = #{liveId,jdbcType=INTEGER},
      room_id = #{roomId,jdbcType=VARCHAR},
      good_typeid = #{goodTypeid,jdbcType=INTEGER},
      good_id = #{goodId,jdbcType=INTEGER},
      good_name = #{goodName,jdbcType=VARCHAR},
      num = #{num,jdbcType=INTEGER},
      price = #{price,jdbcType=DECIMAL},
      consume_price = #{consumePrice,jdbcType=DECIMAL},
      discount = #{discount,jdbcType=INTEGER},
      dc_price = #{dcPrice,jdbcType=DECIMAL},
      total_price = #{totalPrice,jdbcType=DECIMAL},
      user = #{user,jdbcType=VARCHAR},
      consume_time = #{consumeTime,jdbcType=TIMESTAMP},
      remarks = #{remarks,jdbcType=VARCHAR},
      active = #{active,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>